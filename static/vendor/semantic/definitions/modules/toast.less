/*!
 * # Semantic UI - Toast
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Theme
*******************************/

@type    : 'module';
@element : 'toast';

@import (multiple) '../../theme.config';

/*******************************
        Toast container
*******************************/

.ui.toast-container {
    position: fixed;
    z-index: 9999;
}

.ui.top.right.toast-container {
    top: @toastContainerDistance;
    right: @toastContainerDistance;
}

.ui.top.left.toast-container {
    top: @toastContainerDistance;
    left: @toastContainerDistance;
}

.ui.top.center.toast-container {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0%);
    top: @toastContainerDistance;
}

.ui.bottom.right.toast-container {
    bottom: @toastContainerDistance;
    right: @toastContainerDistance;
}

.ui.bottom.left.toast-container {
    bottom: @toastContainerDistance;
    left: @toastContainerDistance;
}

.ui.bottom.center.toast-container {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0%);
    bottom: @toastContainerDistance;
}

/*******************************
            Toast
*******************************/

.toast {
    display: none;
    width: @toastWidth;
    border-radius: @defaultBorderRadius;
    padding: @toastPadding;
    margin: @toastMargin;
    color: @toastTextColor;
    opacity: @toastOpacity;
}

.toast:hover {
    opacity: @toastOpacityOnHover;
    cursor: @toastCursorOnHover;
}

.animating.toast,
.visible.toast {
  display: block;
}

.toast > .icon {
    margin-right: @toastIconRightMargin;
}

.toast > .content > .title {
    font-weight: bold;
}

.info.toast {
    background-color: @toastInfoColor;
}

.warning.toast {
    background-color: @toastWarningColor;
}

.success.toast {
    background-color: @toastSuccessColor;
}

.error.toast {
    background-color: @toastErrorColor;
}

/*--------------
      Icon
---------------*/

.icon.toast > .icon:not(.close) {
    display: inline-block;
    vertical-align: @toastIconVerticalAlign;
    font-size: @toastIconFontSize;
    opacity: @toastIconOpacity;
}
.icon.toast > .content {
    display: inline-block;
    vertical-align: @toastContentVerticalAlign;
}